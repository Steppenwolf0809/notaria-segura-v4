generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enumeración de roles de usuario (SQLite compatible)
enum UserRole {
  ADMIN
  CAJA
  MATRIZADOR
  RECEPCION
  ARCHIVO
}

// Enumeración de tipos de documento (SQLite compatible)
enum DocumentType {
  PROTOCOLO
  DILIGENCIA
  ARRENDAMIENTO
  CERTIFICACION
  OTROS
}

// Enumeración de estados de documento (SQLite compatible)
enum DocumentStatus {
  PENDIENTE
  EN_PROCESO
  LISTO
  ENTREGADO
  ANULADO_NOTA_CREDITO
}

// Enumeración de tipos de eventos de auditoría (SQLite compatible)
enum DocumentEventType {
  DOCUMENT_CREATED
  DOCUMENT_ASSIGNED
  STATUS_CHANGED
  VERIFICATION_GENERATED
  WHATSAPP_SENT
  EXTRACTION_SNAPSHOT
  EXTRACTION_APPLIED
  STATUS_UNDO
  NOTE_ADDED
  UNKNOWN
}

// Modelo principal de usuarios
model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  firstName   String
  lastName    String
  role        UserRole
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLogin   DateTime?

  // Relaciones con documentos
  documents         Document[] @relation("AssignedDocuments")   // Documentos asignados (matrizador)
  createdDocuments  Document[] @relation("CreatedDocuments")    // Documentos creados (caja)
  deliveredDocuments Document[] @relation("DeliveredDocuments") // Documentos entregados (recepción)
  
  // Relación de auditoría - NUEVA FUNCIONALIDAD
  documentEvents    DocumentEvent[]                            // Eventos de auditoría realizados por el usuario
  concuerdoAudits   ConcuerdoAuditLog[]                        // Auditoría de generación de concuerdos

  @@map("users")
}

// Modelo de documentos
model Document {
  id                      String         @id @default(uuid())
  protocolNumber          String         @unique   // Código notarial extraído del XML
  clientName              String                   // Nombre del cliente
  clientPhone             String?                  // CELULAR del cliente para WhatsApp
  clientEmail             String?                  // Email del cliente
  clientId                String?                  // Cédula, RUC, pasaporte o cualquier ID del cliente
  
  // CAMPOS EDITABLES - Agregados para funcionalidad de edición
  detalle_documento       String?                  // Descripción específica del trámite
  comentarios_recepcion   String?                  // Notas especiales para recepción
  
  documentType            DocumentType        // Tipo de documento detectado
  status                  DocumentStatus @default(PENDIENTE)
  verificationCode        String?                  // Código de 4 dígitos para entrega
  
  // Relaciones
  assignedToId            Int?                     // FK al matrizador asignado
  assignedTo              User?          @relation("AssignedDocuments", fields: [assignedToId], references: [id])
  createdById             Int                      // FK al usuario de caja que creó
  createdBy               User           @relation("CreatedDocuments", fields: [createdById], references: [id])
  
  // Información extraída del XML
  actoPrincipalDescripcion String                  // Descripción del acto principal detectado
  actoPrincipalValor       Float                   // Valor del acto principal
  totalFactura             Float                   // Total de la factura XML
  matrizadorName           String                  // Nombre del matrizador del XML
  itemsSecundarios         String?                   // Array de items ignorados para auditoría (JSON string)
  xmlOriginal              String?                 // XML completo opcional

  // Agrupación de documentos
  documentGroupId       String?    // ID del grupo (compartido entre documentos agrupados)
  isGrouped            Boolean @default(false)
  groupLeaderId        String?    // ID del documento "líder" del grupo
  groupPosition        Int?       // Posición en el grupo (1=líder, 2,3,4...)
  
  // Código de verificación grupal
  groupVerificationCode String?   // MISMO código para todos los del grupo
  
  // Estados de agrupación
  groupCreatedAt       DateTime?
  groupCreatedBy       String?    // ID del matrizador que creó el grupo
  
  // Control de entrega grupal
  groupDeliveredAt     DateTime?  // Cuando se entregó el grupo completo
  groupDeliveredTo     String?    // Quien recibió el grupo
  individualDelivered  Boolean @default(false) // Si se entregó individualmente

  // CONFIGURACIÓN DE NOTIFICACIONES
  notificationPolicy   String  @default("automatica") // "automatica", "no_notificar", "entrega_inmediata"

  // CAMPOS ESPECÍFICOS DE RECEPCIÓN
  codigoRetiro         String?    // Código de 4 dígitos para retiro (individual o grupal)
  entregadoA           String?    // Nombre de quien retira el documento
  cedulaReceptor       String?    // Cédula/Pasaporte de quien retira (opcional)
  relacionTitular      String?    // Relación con titular: titular, abogado, empleado, tercero
  verificacionManual   Boolean @default(false) // Cliente validado sin código
  facturaPresenta      Boolean @default(false) // Cliente presentó factura de pago
  fechaEntrega         DateTime?  // Fecha y hora de entrega
  usuarioEntregaId     Int?       // ID del usuario de recepción que entregó
  usuarioEntrega       User?      @relation("DeliveredDocuments", fields: [usuarioEntregaId], references: [id])
  observacionesEntrega String?    // Observaciones adicionales de la entrega

  // Nota de crédito (anulación)
  notaCreditoMotivo       String?          // Motivo obligatorio al aplicar nota de crédito
  notaCreditoEstadoPrevio String?  // Estado previo para permitir reversión
  notaCreditoFecha        DateTime?        // Fecha en que se aplicó la nota de crédito

  documentGroup         DocumentGroup? @relation(fields: [documentGroupId], references: [id])
  
  // Relación de auditoría - NUEVA FUNCIONALIDAD
  events                DocumentEvent[]        // Historial de eventos del documento
  notifications         WhatsAppNotification[] // Notificaciones enviadas para este documento
  concuerdoAudits       ConcuerdoAuditLog[]    // Auditoría de generación de concuerdos

  createdAt               DateTime       @default(now())
  updatedAt               DateTime       @updatedAt
  
  @@map("documents")
  // Índices para acelerar listados y filtros comunes
  @@index([status])
  @@index([createdAt])
  @@index([updatedAt])
  @@index([assignedToId])
  @@index([documentGroupId])
  @@index([assignedToId, status])
  @@index([documentGroupId, status])
}

// Modelo para gestionar grupos
model DocumentGroup {
  id                   String @id @default(uuid())
  groupCode           String @unique // Código único del grupo
  verificationCode    String @unique // Código de 4 dígitos compartido
  
  // Información del cliente
  clientName          String
  clientPhone         String
  clientEmail         String?
  
  // Estados del grupo
  status              String @default("IN_PROCESS") // IN_PROCESS, READY, DELIVERED
  documentsCount      Int
  
  // Control de notificaciones
  notificationSent    Boolean @default(false)
  notificationSentAt  DateTime?
  
  // Metadatos
  createdBy           String    // ID del matrizador
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  // Relación con documentos
  documents          Document[]
  notifications      WhatsAppNotification[]
}

// enum GroupStatus (SQLite compatible)

// MODELO DE AUDITORÍA - Registro de eventos de documentos
model DocumentEvent {
  id              String            @id @default(uuid())
  documentId      String                          // FK al documento
  userId          Int                             // FK al usuario que realizó la acción
  eventType       DocumentEventType @default(UNKNOWN) // Tipo de evento (enum)
  description     String                         // Descripción del evento
  details         String?                          // Detalles adicionales del evento (JSON string)
  // Detalles enriquecidos de entrega (compatibles hacia atrás)
  personaRetiro        String?    // Nombre completo de quien retira
  cedulaRetiro         String?    // Cédula/identificación de quien retira
  metodoVerificacion   String?    // codigo_whatsapp | cedula | telefono | manual
  observacionesRetiro  String?    // Observaciones del retiro
  ipAddress       String?                        // IP desde donde se realizó la acción
  userAgent       String?                        // User agent del navegador
  createdAt       DateTime  @default(now())

  // Relaciones
  document        Document  @relation(fields: [documentId], references: [id], onDelete: Cascade)
  user            User      @relation(fields: [userId], references: [id])

  @@map("document_events")
  // Índices para timelines por documento y auditoría por usuario
  @@index([documentId, createdAt])
  @@index([userId])
  @@index([eventType])
}

// Tipos de eventos para auditoría (SQLite compatible)

// Modelo para historial de notificaciones WhatsApp
model WhatsAppNotification {
  id            String              @id @default(uuid())
  documentId    String?                                 // FK al documento (opcional para notificaciones grupales)
  groupId       String?                                 // FK al grupo (opcional)
  clientName    String                                  // Nombre del cliente
  clientPhone   String                                  // Número de teléfono
  messageType   String                       // Tipo de notificación
  messageBody   String                                  // Contenido del mensaje
  status        String  @default("PENDING")  // Estado de la notificación
  messageId     String?                                 // ID del mensaje de Twilio (si se envió)
  errorMessage  String?                                 // Error si falló
  sentAt        DateTime?                               // Fecha de envío exitoso
  createdAt     DateTime            @default(now())
  
  // Relaciones opcionales
  document      Document?  @relation(fields: [documentId], references: [id])
  group         DocumentGroup? @relation(fields: [groupId], references: [id])
  
  @@map("whatsapp_notifications")
  // Índices para métricas y búsquedas
  @@index([status])
  @@index([documentId])
  @@index([groupId])
  @@index([createdAt])
}

// Tipos de notificación (SQLite compatible)
// Estados de notificación (SQLite compatible)

// Modelo para templates WhatsApp personalizables por admin
model WhatsAppTemplate {
  id        String              @id @default(uuid())
  tipo      String        // Tipo de template
  titulo    String              // Título descriptivo para el admin
  mensaje   String              // Contenido del mensaje con variables {cliente}, {documento}, etc.
  activo    Boolean             @default(true)
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  
  @@map("whatsapp_templates")
}

// Tipos de templates disponibles (SQLite compatible)

// Modelo básico para verificar conexión
model TestConnection {
  id        Int      @id @default(autoincrement())
  message   String   @default("Conexión exitosa")
  createdAt DateTime @default(now())
  
  @@map("test_connection")
}

// Configuración del sistema (clave-valor) para toggles administrables
model SystemSetting {
  id        String   @id @default(uuid())
  key       String   @unique
  value     String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@map("system_settings")
  @@index([key])
}

// MODELO DE AUDITORÍA PARA CONCUERDOS - T10 Hardening
model ConcuerdoAuditLog {
  id              String   @id @default(uuid())
  docId           String?  // FK opcional al documento fuente
  estructura      String   // "A"|"B"|"C"
  templateMode    String   // "structural"|"family"
  force           String   // "auto"|"A"|"B"|"C"
  hashConcuerdo   String   // SHA-256 de PRIMERA+SEGUNDA
  createdBy       Int      // FK al usuario que generó
  createdAt       DateTime @default(now())
  meta            String?    // JSON con métricas, warnings, versión plantilla, timings

  // Relaciones
  user            User     @relation(fields: [createdBy], references: [id])
  document        Document? @relation(fields: [docId], references: [id])

  @@map("concuerdo_audit_logs")
  @@index([docId])
  @@index([createdBy])
  @@index([createdAt])
  @@index([estructura])
}